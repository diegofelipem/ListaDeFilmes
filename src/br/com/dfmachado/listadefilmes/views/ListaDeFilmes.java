package br.com.dfmachado.listadefilmes.views;

import br.com.dfmachado.listadefilmes.exceptions.GenericCustomException;
import br.com.dfmachado.listadefilmes.models.Filme;
import br.com.dfmachado.listadefilmes.models.Status;
import br.com.dfmachado.listadefilmes.views.ComponentsAndRenderers.DataCellEditor;
import br.com.dfmachado.listadefilmes.views.ComponentsAndRenderers.StatusCellEditor;
import br.com.dfmachado.listadefilmes.views.ComponentsAndRenderers.FilmeTableModel;
import br.com.dfmachado.listadefilmes.views.ComponentsAndRenderers.FilmeTableRenderer;
import br.com.dfmachado.listadefilmes.views.ComponentsAndRenderers.StatusComboModel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author diego.felipe
 */
public class ListaDeFilmes extends JFrame {

    private FilmeTableModel filmeModel;
    private TableRowSorter<TableModel> sorter;

    /**
     * Creates new form ListaDeFilmes
     */
    public ListaDeFilmes() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("images/movie_down.png")).getImage());
        this.filmeModel = new FilmeTableModel();
        fillTable();
        this.updateTotalLabel();
        customizeTable();
        this.statusCombo.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value == null) {
                    setText("todos");
                } else if (value instanceof Status) {
                    Status s = (Status) value;
                    setText(s.getDescricao());
                }
                return this;
            }
        });
        txt_pesquisa.addKeyListener(this.filtroPesquisar());
    }

    private void fillTable() {
        this.tbl_Filmes.setModel(filmeModel);
        this.sorter = new TableRowSorter<>(filmeModel);
        this.tbl_Filmes.setRowSorter(sorter);
    }

    private void customizeTable() {
        JTable tabela = this.tbl_Filmes;
        FilmeTableRenderer renderer = new FilmeTableRenderer();
        StatusCellEditor statusCellEditor = new StatusCellEditor();
        DataCellEditor dataCellEditor = new DataCellEditor();
        tabela.setDefaultRenderer(Object.class, renderer);

        tabela.getColumnModel().getColumn(3).setCellEditor(dataCellEditor);
        tabela.getColumnModel().getColumn(4).setCellEditor(statusCellEditor);
        tabela.getColumnModel().getColumn(0).setPreferredWidth(30);
        tabela.getColumnModel().getColumn(1).setPreferredWidth(320);
        tabela.getColumnModel().getColumn(2).setPreferredWidth(320);
        tabela.getColumnModel().getColumn(3).setPreferredWidth(100);
        tabela.getColumnModel().getColumn(4).setPreferredWidth(110);

        tabela.getTableHeader().setResizingAllowed(false);
        tabela.getTableHeader().setReorderingAllowed(false);
        tabela.getTableHeader().setFont(new Font(null, 1, 15));
        ((DefaultTableCellRenderer) tabela.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        tabela.setRowHeight(22);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusCombo = new javax.swing.JComboBox();
        btnNovoRegistro = new javax.swing.JButton();
        ScrollTabela = new javax.swing.JScrollPane();
        tbl_Filmes = new javax.swing.JTable();
        lb_filtro = new javax.swing.JLabel();
        btnExcluirRegistro = new javax.swing.JButton();
        lb_totalExibido = new javax.swing.JLabel();
        txt_pesquisa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de Filmes a baixar");
        setResizable(false);

        statusCombo.setModel(new StatusComboModel());
        statusCombo.setBorder(null);
        statusCombo.setFocusable(false);
        statusCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                statusComboItemStateChanged(evt);
            }
        });

        btnNovoRegistro.setText("Adicionar Novo");
        btnNovoRegistro.setActionCommand("");
        btnNovoRegistro.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnNovoRegistro.setFocusable(false);
        btnNovoRegistro.setPreferredSize(new java.awt.Dimension(50, 30));
        btnNovoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoRegistroActionPerformed(evt);
            }
        });

        tbl_Filmes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ScrollTabela.setViewportView(tbl_Filmes);

        lb_filtro.setText("Filtrar por:");

        btnExcluirRegistro.setText("Excluir Selecionado");
        btnExcluirRegistro.setActionCommand("");
        btnExcluirRegistro.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnExcluirRegistro.setFocusable(false);
        btnExcluirRegistro.setPreferredSize(new java.awt.Dimension(50, 30));
        btnExcluirRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirRegistroActionPerformed(evt);
            }
        });

        lb_totalExibido.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_totalExibido.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 0));

        txt_pesquisa.setToolTipText("Digite a pesquisa e tecle ENTER");

        jLabel1.setText("Pesquisar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnNovoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnExcluirRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(lb_totalExibido, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_filtro)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(ScrollTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNovoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExcluirRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2)
                .addComponent(ScrollTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_totalExibido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lb_filtro))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void updateTotalLabel() {
        int count = this.sorter.getViewRowCount();
        String txt = count + " registros encontrados.";
        this.lb_totalExibido.setText(txt);
    }

    private void btnNovoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoRegistroActionPerformed
        NewRegistDialog modal = new NewRegistDialog(this, true);
        modal.setLocationRelativeTo(this);
        modal.setVisible(true);
        if (modal.isSuccess()) {
            String msg;
            Filme f = modal.getFilmeCadastrado();
            try {
                this.filmeModel.AddRow(f);
                msg = "Registro Cadastrado";
                this.updateTotalLabel();
            } catch (GenericCustomException ex) {
                msg = ex.getMessage();
            }
            ListaDeFilmes.showAlertMessage(this, msg);
        }
    }//GEN-LAST:event_btnNovoRegistroActionPerformed

    private void btnExcluirRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirRegistroActionPerformed
        int linha = this.tbl_Filmes.getSelectedRow();
        if (linha != -1) {
            int indiceModel = sorter.convertRowIndexToModel(linha);
            int resp = JOptionPane.showConfirmDialog(this, "Remover " + (indiceModel + 1) + "º registro?", "Alerta", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (resp == 0) {
                String msg;
                try {
                    this.filmeModel.removeRow(indiceModel);
                    msg = "Registro " + (indiceModel + 1) + " removido";
                    this.updateTotalLabel();
                } catch (GenericCustomException ex) {
                    msg = ex.getMessage();
                }
                ListaDeFilmes.showAlertMessage(this, msg);
            }
        }
    }//GEN-LAST:event_btnExcluirRegistroActionPerformed

    private void statusComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_statusComboItemStateChanged
        Status status = (Status) ((JComboBox) evt.getSource()).getSelectedItem();
        int indiceColunaStatus = this.tbl_Filmes.getColumnModel().getColumnIndex("Status");
        if (status == null) {
            this.sorter.setRowFilter(null);
            this.updateTotalLabel();
        } else {
            this.sorter.setRowFilter(RowFilter.regexFilter(status.getDescricao(), indiceColunaStatus));
            this.updateTotalLabel();
        }
    }//GEN-LAST:event_statusComboItemStateChanged

    public static void showAlertMessage(Component root, String msg) {
        JOptionPane.showMessageDialog(root, msg, "Aviso", JOptionPane.PLAIN_MESSAGE);
    }

    private KeyAdapter filtroPesquisar() {
        KeyAdapter adapter = new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    String busca = txt_pesquisa.getText().trim();
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + busca));
                    updateTotalLabel();
                }
            }
        };
        return adapter;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                        if ("windows".equalsIgnoreCase(info.getName())) {
                            javax.swing.UIManager.put("control", new Color(230, 230, 230));
                            javax.swing.UIManager.put("background", new Color(0, 230, 230));
                            javax.swing.UIManager.put("Table.showGrid", true);
                            javax.swing.UIManager.put("Table.alternateRowColor", new Color(232, 232, 232));
                            javax.swing.UIManager.setLookAndFeel(info.getClassName());
                            break;
                        }
                    }
                    ListaDeFilmes a = new ListaDeFilmes();
                    a.setLocationRelativeTo(null);
                    a.setVisible(true);
                } catch (Exception ex) {
                    String msg = "Erro ao iniciar o aplicativo.\n" + ex.getMessage();
                    ListaDeFilmes.showAlertMessage(null, msg);
                    System.exit(0);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollTabela;
    private javax.swing.JButton btnExcluirRegistro;
    private javax.swing.JButton btnNovoRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lb_filtro;
    private javax.swing.JLabel lb_totalExibido;
    private javax.swing.JComboBox statusCombo;
    private javax.swing.JTable tbl_Filmes;
    private javax.swing.JTextField txt_pesquisa;
    // End of variables declaration//GEN-END:variables
}
